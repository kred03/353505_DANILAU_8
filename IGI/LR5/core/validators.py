from django.core.exceptions import ValidationError
import re

def validate_phone(value):
    """
    Валидация номера телефона.
    Допустимые форматы:
    - +375 (29) 123-45-67
    - +375291234567
    - 375291234567
    - 8 029 123-45-67
    """
    # Удаляем все не цифры для проверки длины
    cleaned_number = re.sub(r'\D', '', value)
    
    # Проверяем длину (9 цифр для номера + 3 цифры код страны)
    if len(cleaned_number) not in [12, 13]:  # 12 для формата 375... и 13 для +375...
        raise ValidationError('Номер телефона должен содержать 12 или 13 цифр')
    
    # Проверяем формат с помощью регулярного выражения
    patterns = [
        r'^\+375 \(\d{2}\) \d{3}-\d{2}-\d{2}$',  # +375 (29) 123-45-67
        r'^\+375\d{9}$',                          # +375291234567
        r'^375\d{9}$',                            # 375291234567
        r'^8 0\d{2} \d{3}-\d{2}-\d{2}$'          # 8 029 123-45-67
    ]
    
    if not any(re.match(pattern, value) for pattern in patterns):
        raise ValidationError(
            'Неверный формат номера. Допустимые форматы:\n'
            '+375 (29) 123-45-67\n'
            '+375291234567\n'
            '375291234567\n'
            '8 029 123-45-67'
        ) 